{
  "stats": {
    "suites": 3,
    "tests": 8,
    "passes": 7,
    "pending": 0,
    "failures": 1,
    "start": "2017-11-13T14:24:33.067Z",
    "end": "2017-11-13T14:24:38.223Z",
    "duration": 5156,
    "testsRegistered": 8,
    "passPercent": 87.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "同步异常处理",
        "suites": [],
        "tests": [
          {
            "title": "异常流,",
            "fullTitle": "同步异常处理 异常流,",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a11 = function () {\n  this.finish(2);\n};\nconst b11 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a11).to(b11).to((result, opera) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    opera.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "9550db0d-2085-4dbb-ae45-c7cd1c7554f0",
            "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "catch捕获异常,",
            "fullTitle": "同步异常处理 catch捕获异常,",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a12 = function () {\n  this.finish(2);\n};\nconst b12 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a12).to(b12).to((result) => {\n  console.log('计算的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "c389de46-6047-4307-909a-619fcd2bad0f",
            "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\.tmp\\mocha-webpack\\1510579068735\\bundle.js",
        "uuid": "22e30b6f-295b-4b48-a391-a3fa3e687056",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "F:\\技术学习与研究\\github\\yc-task-manager\\.tmp\\mocha-webpack\\1510579068735\\bundle.js",
        "passes": [
          {
            "title": "异常流,",
            "fullTitle": "同步异常处理 异常流,",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a11 = function () {\n  this.finish(2);\n};\nconst b11 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a11).to(b11).to((result, opera) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    opera.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "9550db0d-2085-4dbb-ae45-c7cd1c7554f0",
            "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "catch捕获异常,",
            "fullTitle": "同步异常处理 catch捕获异常,",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a12 = function () {\n  this.finish(2);\n};\nconst b12 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a12).to(b12).to((result) => {\n  console.log('计算的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "c389de46-6047-4307-909a-619fcd2bad0f",
            "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 3,
        "rootEmpty": false
      },
      {
        "title": "异步任务流程",
        "suites": [],
        "tests": [
          {
            "title": "简单线性结构",
            "fullTitle": "异步任务流程 简单线性结构",
            "timedOut": false,
            "duration": 3002,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a21 = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 1000);\n};\nconst b21 = function (a) {\n  setTimeout(() => {\n    console.log(3 + a);\n    done();\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a21).to(b21).run();",
            "err": {},
            "isRoot": false,
            "uuid": "a0826fd9-7b48-45b4-af35-8429e3f222d4",
            "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "复杂的图结构",
            "fullTitle": "异步任务流程 复杂的图结构",
            "timedOut": false,
            "duration": 602,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "e9b990b5-2bd7-43c0-b8b5-f452c8678de4",
            "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "提前完成任务",
            "fullTitle": "异步任务流程 提前完成任务",
            "timedOut": false,
            "duration": 1002,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "6587cc0e-340a-498b-a958-b34edd40427c",
            "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\.tmp\\mocha-webpack\\1510579068735\\bundle.js",
        "uuid": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "F:\\技术学习与研究\\github\\yc-task-manager\\.tmp\\mocha-webpack\\1510579068735\\bundle.js",
        "passes": [
          {
            "title": "简单线性结构",
            "fullTitle": "异步任务流程 简单线性结构",
            "timedOut": false,
            "duration": 3002,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a21 = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 1000);\n};\nconst b21 = function (a) {\n  setTimeout(() => {\n    console.log(3 + a);\n    done();\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a21).to(b21).run();",
            "err": {},
            "isRoot": false,
            "uuid": "a0826fd9-7b48-45b4-af35-8429e3f222d4",
            "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "复杂的图结构",
            "fullTitle": "异步任务流程 复杂的图结构",
            "timedOut": false,
            "duration": 602,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "e9b990b5-2bd7-43c0-b8b5-f452c8678de4",
            "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "提前完成任务",
            "fullTitle": "异步任务流程 提前完成任务",
            "timedOut": false,
            "duration": 1002,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "6587cc0e-340a-498b-a958-b34edd40427c",
            "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 4606,
        "rootEmpty": false
      },
      {
        "title": "模式测试",
        "suites": [],
        "tests": [
          {
            "title": "竞争模式",
            "fullTitle": "模式测试 竞争模式",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.finish('任务a');\n  }, 2000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 20);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a, b, {\n  mode: 'compete'\n}).to((who) => {\n  console.log(who + '率先完成');\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "4f16b2d6-a24a-4998-a9e7-97412e372099",
            "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "竞争模式 end测试一",
            "fullTitle": "模式测试 竞争模式 end测试一",
            "timedOut": false,
            "duration": 202,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "93588eb3-b8bc-4e49-ae51-4468f206d8c6",
            "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "竞争模式 end测试二",
            "fullTitle": "模式测试 竞争模式 end测试二",
            "timedOut": true,
            "duration": 309,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.end('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
            "err": {
              "message": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
              "estack": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\n    at Timeout.<anonymous> (node_modules\\_mocha@4.0.1@mocha\\lib\\runnable.js:238:19)"
            },
            "isRoot": false,
            "uuid": "64187224-75eb-4d4b-8c5e-37e8e0666e75",
            "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\.tmp\\mocha-webpack\\1510579068735\\bundle.js",
        "uuid": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "F:\\技术学习与研究\\github\\yc-task-manager\\.tmp\\mocha-webpack\\1510579068735\\bundle.js",
        "passes": [
          {
            "title": "竞争模式",
            "fullTitle": "模式测试 竞争模式",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.finish('任务a');\n  }, 2000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 20);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a, b, {\n  mode: 'compete'\n}).to((who) => {\n  console.log(who + '率先完成');\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "4f16b2d6-a24a-4998-a9e7-97412e372099",
            "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "竞争模式 end测试一",
            "fullTitle": "模式测试 竞争模式 end测试一",
            "timedOut": false,
            "duration": 202,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "93588eb3-b8bc-4e49-ae51-4468f206d8c6",
            "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "竞争模式 end测试二",
            "fullTitle": "模式测试 竞争模式 end测试二",
            "timedOut": true,
            "duration": 309,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.end('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
            "err": {
              "message": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
              "estack": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\n    at Timeout.<anonymous> (node_modules\\_mocha@4.0.1@mocha\\lib\\runnable.js:238:19)"
            },
            "isRoot": false,
            "uuid": "64187224-75eb-4d4b-8c5e-37e8e0666e75",
            "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
            "isHook": false,
            "skipped": false
          }
        ],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 2,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 532,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "0792616b-8037-4489-a1d6-2ed696f2f900",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "异常流,",
      "fullTitle": "同步异常处理 异常流,",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a11 = function () {\n  this.finish(2);\n};\nconst b11 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a11).to(b11).to((result, opera) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    opera.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "9550db0d-2085-4dbb-ae45-c7cd1c7554f0",
      "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "catch捕获异常,",
      "fullTitle": "同步异常处理 catch捕获异常,",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a12 = function () {\n  this.finish(2);\n};\nconst b12 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a12).to(b12).to((result) => {\n  console.log('计算的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "c389de46-6047-4307-909a-619fcd2bad0f",
      "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "简单线性结构",
      "fullTitle": "异步任务流程 简单线性结构",
      "timedOut": false,
      "duration": 3002,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a21 = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 1000);\n};\nconst b21 = function (a) {\n  setTimeout(() => {\n    console.log(3 + a);\n    done();\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a21).to(b21).run();",
      "err": {},
      "isRoot": false,
      "uuid": "a0826fd9-7b48-45b4-af35-8429e3f222d4",
      "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "复杂的图结构",
      "fullTitle": "异步任务流程 复杂的图结构",
      "timedOut": false,
      "duration": 602,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "e9b990b5-2bd7-43c0-b8b5-f452c8678de4",
      "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "提前完成任务",
      "fullTitle": "异步任务流程 提前完成任务",
      "timedOut": false,
      "duration": 1002,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "6587cc0e-340a-498b-a958-b34edd40427c",
      "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "竞争模式",
      "fullTitle": "模式测试 竞争模式",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.finish('任务a');\n  }, 2000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 20);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a, b, {\n  mode: 'compete'\n}).to((who) => {\n  console.log(who + '率先完成');\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "4f16b2d6-a24a-4998-a9e7-97412e372099",
      "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "竞争模式 end测试一",
      "fullTitle": "模式测试 竞争模式 end测试一",
      "timedOut": false,
      "duration": 202,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "93588eb3-b8bc-4e49-ae51-4468f206d8c6",
      "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "竞争模式 end测试二",
      "fullTitle": "模式测试 竞争模式 end测试二",
      "timedOut": true,
      "duration": 309,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.end('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
      "err": {
        "message": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
        "estack": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\n    at Timeout.<anonymous> (node_modules\\_mocha@4.0.1@mocha\\lib\\runnable.js:238:19)"
      },
      "isRoot": false,
      "uuid": "64187224-75eb-4d4b-8c5e-37e8e0666e75",
      "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "异常流,",
      "fullTitle": "同步异常处理 异常流,",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a11 = function () {\n  this.finish(2);\n};\nconst b11 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a11).to(b11).to((result, opera) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    opera.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "9550db0d-2085-4dbb-ae45-c7cd1c7554f0",
      "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "catch捕获异常,",
      "fullTitle": "同步异常处理 catch捕获异常,",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a12 = function () {\n  this.finish(2);\n};\nconst b12 = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a12).to(b12).to((result) => {\n  console.log('计算的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "c389de46-6047-4307-909a-619fcd2bad0f",
      "parentUUID": "22e30b6f-295b-4b48-a391-a3fa3e687056",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "简单线性结构",
      "fullTitle": "异步任务流程 简单线性结构",
      "timedOut": false,
      "duration": 3002,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a21 = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 1000);\n};\nconst b21 = function (a) {\n  setTimeout(() => {\n    console.log(3 + a);\n    done();\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a21).to(b21).run();",
      "err": {},
      "isRoot": false,
      "uuid": "a0826fd9-7b48-45b4-af35-8429e3f222d4",
      "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "复杂的图结构",
      "fullTitle": "异步任务流程 复杂的图结构",
      "timedOut": false,
      "duration": 602,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "e9b990b5-2bd7-43c0-b8b5-f452c8678de4",
      "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "提前完成任务",
      "fullTitle": "异步任务流程 提前完成任务",
      "timedOut": false,
      "duration": 1002,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "6587cc0e-340a-498b-a958-b34edd40427c",
      "parentUUID": "adc029f9-06b1-4d79-afb8-939e5bc5e996",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "竞争模式",
      "fullTitle": "模式测试 竞争模式",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.finish('任务a');\n  }, 2000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 20);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a, b, {\n  mode: 'compete'\n}).to((who) => {\n  console.log(who + '率先完成');\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "4f16b2d6-a24a-4998-a9e7-97412e372099",
      "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "竞争模式 end测试一",
      "fullTitle": "模式测试 竞争模式 end测试一",
      "timedOut": false,
      "duration": 202,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.finish('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "93588eb3-b8bc-4e49-ae51-4468f206d8c6",
      "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "竞争模式 end测试二",
      "fullTitle": "模式测试 竞争模式 end测试二",
      "timedOut": true,
      "duration": 309,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end('任务a');\n  }, 1000);\n};\nconst b = function () {\n  setTimeout(() => {\n    this.end('任务b');\n  }, 200);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(b, a, {\n  mode: 'compete'\n}).to((who, opera) => {\n  console.log('经过中间任务');\n  opera.finish(who);\n  done();\n}).to((who)=> {\n  console.log(who + '率先完成');\n}).run();",
      "err": {
        "message": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
        "estack": "Error: Timeout of 1ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\n    at Timeout.<anonymous> (node_modules\\_mocha@4.0.1@mocha\\lib\\runnable.js:238:19)"
      },
      "isRoot": false,
      "uuid": "64187224-75eb-4d4b-8c5e-37e8e0666e75",
      "parentUUID": "ab77c9fc-d9c8-4f44-af1f-42fff6da9218",
      "isHook": false,
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}