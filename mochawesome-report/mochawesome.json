{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2017-11-08T12:57:42.826Z",
    "end": "2017-11-08T12:57:47.458Z",
    "duration": 4632,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "异步任务流程",
        "suites": [],
        "tests": [
          {
            "title": "简单线性结构",
            "fullTitle": "异步任务流程 简单线性结构",
            "timedOut": false,
            "duration": 3003,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log(result);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "283520ef-7992-4d46-8c7b-72bfb2923d56",
            "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "复杂的图结构",
            "fullTitle": "异步任务流程 复杂的图结构",
            "timedOut": false,
            "duration": 603,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "636a39d5-210c-49d9-a248-bba4bf0cb198",
            "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "提前完成任务",
            "fullTitle": "异步任务流程 提前完成任务",
            "timedOut": false,
            "duration": 1003,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "0bc04f65-1d6b-4fed-bdc4-3cdc1dd471f0",
            "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\.tmp\\mocha-webpack\\1510144323412\\bundle.js",
        "uuid": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "F:\\技术学习与研究\\github\\yc-task-manager\\.tmp\\mocha-webpack\\1510144323412\\bundle.js",
        "passes": [
          {
            "title": "简单线性结构",
            "fullTitle": "异步任务流程 简单线性结构",
            "timedOut": false,
            "duration": 3003,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log(result);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "283520ef-7992-4d46-8c7b-72bfb2923d56",
            "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "复杂的图结构",
            "fullTitle": "异步任务流程 复杂的图结构",
            "timedOut": false,
            "duration": 603,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "636a39d5-210c-49d9-a248-bba4bf0cb198",
            "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "提前完成任务",
            "fullTitle": "异步任务流程 提前完成任务",
            "timedOut": false,
            "duration": 1003,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "0bc04f65-1d6b-4fed-bdc4-3cdc1dd471f0",
            "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 4609,
        "rootEmpty": false
      },
      {
        "title": "同步异常处理",
        "suites": [],
        "tests": [
          {
            "title": "异常流,",
            "fullTitle": "同步异常处理 异常流,",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    this.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "97353d88-55bd-4ee7-962b-bf3e8477a9ee",
            "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "catch捕获异常,",
            "fullTitle": "同步异常处理 catch捕获异常,",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('计算机的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "94c20ba2-2364-471b-9438-aaec88c2180c",
            "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\.tmp\\mocha-webpack\\1510144323412\\bundle.js",
        "uuid": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "F:\\技术学习与研究\\github\\yc-task-manager\\.tmp\\mocha-webpack\\1510144323412\\bundle.js",
        "passes": [
          {
            "title": "异常流,",
            "fullTitle": "同步异常处理 异常流,",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    this.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "97353d88-55bd-4ee7-962b-bf3e8477a9ee",
            "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "catch捕获异常,",
            "fullTitle": "同步异常处理 catch捕获异常,",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('计算机的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
            "err": {},
            "isRoot": false,
            "uuid": "94c20ba2-2364-471b-9438-aaec88c2180c",
            "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 5,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "ed57e1a5-bf47-47c4-89bc-30cf2ab39b61",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "简单线性结构",
      "fullTitle": "异步任务流程 简单线性结构",
      "timedOut": false,
      "duration": 3003,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log(result);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "283520ef-7992-4d46-8c7b-72bfb2923d56",
      "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "复杂的图结构",
      "fullTitle": "异步任务流程 复杂的图结构",
      "timedOut": false,
      "duration": 603,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "636a39d5-210c-49d9-a248-bba4bf0cb198",
      "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "提前完成任务",
      "fullTitle": "异步任务流程 提前完成任务",
      "timedOut": false,
      "duration": 1003,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "0bc04f65-1d6b-4fed-bdc4-3cdc1dd471f0",
      "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "异常流,",
      "fullTitle": "同步异常处理 异常流,",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    this.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "97353d88-55bd-4ee7-962b-bf3e8477a9ee",
      "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "catch捕获异常,",
      "fullTitle": "同步异常处理 catch捕获异常,",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('计算机的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "94c20ba2-2364-471b-9438-aaec88c2180c",
      "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "简单线性结构",
      "fullTitle": "异步任务流程 简单线性结构",
      "timedOut": false,
      "duration": 3003,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log(result);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "283520ef-7992-4d46-8c7b-72bfb2923d56",
      "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "复杂的图结构",
      "fullTitle": "异步任务流程 复杂的图结构",
      "timedOut": false,
      "duration": 603,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const Aa = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 500);\n};\nconst Ab = function () {\n  setTimeout(() => {\n    this.finish(2);\n  }, 600);\n};\nconst Ba = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 500);\n};\nconst Bb = function () {\n  setTimeout(() => {\n    this.finish(3);\n  }, 600);\n};\nconst A = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Aa, Ab);\nconst B = __WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(Ba, Bb);\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(A, B).to((A, B) => {\n  console.log(A, B);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "636a39d5-210c-49d9-a248-bba4bf0cb198",
      "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "提前完成任务",
      "fullTitle": "异步任务流程 提前完成任务",
      "timedOut": false,
      "duration": 1003,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  setTimeout(() => {\n    this.end(2);\n  }, 1000);\n};\nconst b = function (a) {\n  setTimeout(() => {\n    this.finish(3 + a);\n  }, 2000);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('b任务被跳过,所以结果是' + result);\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "0bc04f65-1d6b-4fed-bdc4-3cdc1dd471f0",
      "parentUUID": "9cc5a2da-26c2-479d-b6a2-aac02336e31c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "异常流,",
      "fullTitle": "同步异常处理 异常流,",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  if ([].toString.call(result) === '[object Error]') {\n    console.log('在b任务捕捉到错误');\n    this.finish(undefined, result);\n  } else {\n    this.finish(result);\n  }\n}).to((result, err) => {\n  if (err) {\n    console.log('在最后也捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "97353d88-55bd-4ee7-962b-bf3e8477a9ee",
      "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "catch捕获异常,",
      "fullTitle": "同步异常处理 catch捕获异常,",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const a = function () {\n  this.finish(2);\n};\nconst b = function (a) {\n  throw new Error();\n  this.finish(3 + a);\n};\n__WEBPACK_IMPORTED_MODULE_0_async_task_manager___default()(a).to(b).to((result) => {\n  console.log('计算机的结果是' + result);\n}).catch((err) => {\n  if (err) {\n    console.log('捕捉到错误!');\n  }\n  done();\n}).run();",
      "err": {},
      "isRoot": false,
      "uuid": "94c20ba2-2364-471b-9438-aaec88c2180c",
      "parentUUID": "359ad53d-5c5c-4c77-8785-76d898ef0a05",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}